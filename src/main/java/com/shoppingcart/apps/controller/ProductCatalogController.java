package com.shoppingcart.apps.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.shoppingcart.apps.entity.Product;
import com.shoppingcart.apps.model.ProductInfo;
import com.shoppingcart.apps.repository.ProductRepository;

@Controller
//@RequestMapping("/api/login")
public class ProductCatalogController {

   // private static final String template = "Hello, %s!";
   // private final AtomicLong counter = new AtomicLong();
	
	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private ProductRepository productRepository;
	
	 
	 // GET: Show product.
	    @RequestMapping(value = { "/api/product" }, method = RequestMethod.GET)
	    public  @ResponseBody ProductInfo product(Model model, @RequestParam(value = "code", defaultValue = "") String code) {
	        ProductInfo productInfo = null;
	        Product product = null;
	 
	        if (code != null && code.length() > 0) {
	        	product = productRepository.findOne(code);
	        }
	        if (product != null) {
	            productInfo = new ProductInfo();
	            productInfo.setCode(product.getCode());
	            productInfo.setName(product.getName());
	            productInfo.setPrice(product.getPrice());	            
	            productInfo.setNewProduct(true);
	        }
	        //model.addAttribute("productForm", productInfo);
	        return productInfo;
	    }
	    
	    @RequestMapping(value = { "/api/productList" }, method = RequestMethod.GET)
	    public  @ResponseBody List<Product> getProducts(HttpServletRequest request,Model model) {	        
	 
	    	List<Product> products= (List<Product>) productRepository.findAll();
	        //model.addAttribute("paginationProducts", result);
	        return products;
	    }
	 
	  

}
